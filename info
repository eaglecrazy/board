3-32


RUN pecl install xdebug-2.9.8 && docker-php-ext-enable xdebug


https://127.0.0.1:8080/adverts - не выводить черновики, проверить вывод дочерних категорий и регионов


sudo chmod 777 storage -R
терминал от рута sudo -s


----------------------
Первоначалальная настройка
----------------------
Директории пометить как excluded:
storage
idea
bootstrap/cache
storage

Плагины:
laravel plugin
ide helper
debugbar



----------------------
IDE HELPER
----------------------
composer require --dev barryvdh/laravel-ide-helper

(этот пункт я не делал)
в config/app.php добавить
Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider::class,

php artisan ide-helper:generate - PHPDoc generation for Laravel Facades
php artisan ide-helper:models - PHPDocs for models
php artisan ide-helper:meta - PhpStorm Meta file

В composer.json нужно добавить, чтобы каждый раз после добавления запускался скрипт
"scripts": {
    "post-update-cmd": [
        "Illuminate\\Foundation\\ComposerScripts::postUpdate",
        "@php artisan ide-helper:generate",
        "@php artisan ide-helper:meta"
    ]
},


----------------------
COMPOSER
----------------------
-   все команды: https://phpprofi.ru/blogs/post/52

-   запуск без ограничения памяти
    php -d memory_limit=-1 /usr/local/bin/composer require --dev barryvdh/laravel-ide-helper
-   убрать dev пакеты (или установить только пакеты для продакшена)
    composer install --no-dev





----------------------
RESOURCE CONTROLLER
----------------------
Verb	    URI	                    Action	        Route Name
GET	        /photos	                index	        photos.index
GET	        /photos/create	        create	        photos.create
POST	    /photos	                store	        photos.store
GET	        /photos/{photo}	        show	        photos.show
GET	        /photos/{photo}/edit	edit	        photos.edit
PUT/PATCH	/photos/{photo}	        update	        photos.update
DELETE	    /photos/{photo}	        destroy	        photos.destroy




----------------------
DEBUGBAR
----------------------
https://github.com/barryvdh/laravel-debugbar

composer require barryvdh/laravel-debugbar --dev



----------------------
BREADCRUMBS
----------------------
https://github.com/davejamesmiller/laravel-breadcrumbs



----------------------
Nested Set
(компонент для получения данных из деревьев
подойдёт для категорий)
----------------------
composer require kalnoy/nestedset





----------------------
Flash уведомления
----------------------
РАЗОБРАТЬСЯ КАК РАБОТАЕТ
https://github.com/laracasts/flash
composer require laracasts/flash


----------------------
GIT
----------------------
git pull https://github.com/TeamOrange-GB/cats.git dev

Вернуть к исходному до добавления
git restore resources/js/bootstrap.js
эту лучше не использовать git commit -- resources/js/bootstrap.js

Вернуть файл к исходному после добавления
git reset head resources/js/bootstrap.js

Изменения, внесенные указанным коммитом.
git show <коммит>

Комментируем коммит прямо из командной строки
git commit -m "commit comment"

ОТКАТ К СТАРОМУ КОММИТУ
Найдите конкретный коммит, к которому вы хотите вернуть все изменения:
$ git log --oneline
Откатите все изменения к старому коммиту:
$ git checkout d217bb6 .
Обратите Внимание: Точка (.) после имени ветки является обязательной.
Добавьте изменения в staging и сделайте коммит:
git add -A
git commit -m "Revert commit: d217bb6"
Сделав rollback локально, вы можете откатить изменения в удаленном репозитории, сделав push нового коммита, который уже содержит необходимые изменения:
$ git push

УБРАТЬ ИЗ ОТСЛЕЖИВАНИЯ
git rm -rf --cached .
git add .
git commit -m "fix gitignore"




----------------------
Docker
----------------------
Видео про настройку отладчика в phpstorm (оно точно работает с версией 2.9.1 !!!)
https://www.youtube.com/watch?v=9MhHQJjMulk&feature=emb_logo&ab_channel=PrettyCode
Статья про настройку отладчика в phpstorm
https://justcodeit.ru/otladka-php-prilozhenij-v-docker-s-pomoshhyu-phpstorm-i-xdebug/

Запуск скрипта из контейнера:
sudo docker exec app_php-cli_1 php artisan migrate

Подключение к контейнеру
# docker ps
# docker exec -i -t 6ee6223a3ce3 bash

Список контейнеров:
sudo docker container ls

Работающие контейнеры:
docker ps

Узнать IP Docker:
sudo ifconfig docker0
----------------------
Linux
----------------------
вывод файла: cat php.ini

копирование файла "$ cp опции файл-источник файл-приемник"
cp -R /home/vagrant/code/board/es/elasticsearch /usr/bin/

поиск файла: find / -name mcrypt.so -print (можно искать *.so)

создать папку
mkdir -p ./x/y

список расширений php -m

https://losst.ru/avtozagruzka-linux

права:
R-4
W-2
X-1
chmod 755 /somefile
drwxr-s--- 2 root     elasticsearch  4096 Jan 24 11:14 elasticsearch


----------------------
Elastic Search
----------------------
Инструкция: https://www.elastic.co/guide/en/elasticsearch/reference/6.2/deb.html
https://www.elastic.co/guide/en/elasticsearch/reference/6.2/_installation.html

скачать в текущую папку:
curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.tar.gz

установить
в текущую папку: tar -xvf elasticsearch-6.2.4.tar.gz
в другую папку: tar -xvf elasticsearch-6.2.4.tar.gz -C /usr/bin/elasticsearch

установить права
sudo -s chown ${USER}:${USER} /usr/bin/elasticsearch -R

запустить
/usr/bin/elasticsearch/elasticsearch-6.2.4/bin/elasticsearch -d

/home/vagrant/code/board/es/elasticsearch/bin/elasticsearch
/home/vagrant/code/board/es/elasticsearch/bin/elasticsearch -d


Проверка рабоcтоспособности: curl http://127.0.0.1:9201
Поиск: curl http://127.0.0.1:9201/app/_search?pretty=true

	sudo sysctl -w vm.max_map_count=262144

----------------------
Подключение к удалённой БД
----------------------
mysql -uroot -psecret -h127.0.0.1 -P33061

mysql -u {username} -p {password} \
    -h {remote server ip or name} -P {port} \
    -D {DB name}




----------------------
Отправка запросов из кода
----------------------
https://github.com/guzzle/guzzle
guzzlehttp/guzzle





----------------------
SSH на хостинге
----------------------
доступные обработчики
ls /opt/

/opt/php72/bin/php script.php
/opt/php72/bin/php artisan migrate:fresh --seed
/opt/php72/bin/php artisan migrate:rollback
/opt/php72/bin/php composer update

КОМАНДА ДЛЯ ОБНОВЛЕНИЯ БЕЗ ЛИМИТА ПАМЯТИ
/opt/php72/bin/php -d memory_limit=1024M /usr/local/bin/composer update
/opt/php72/bin/php -d memory_limit=-1 /usr/local/bin/composer update

ОБНОВЛЕНИЕ АВТОЛОАДА
/opt/php72/bin/php /usr/local/bin/composer dump-autoload

/usr/bin/php7.4  -d memory_limit=512M composer require doctrine/dbal
/etc/php/7.4/cli/php.ini
php -m

----------------------
FTP на хостинге
----------------------
статус
sudo service vsftpd status

автозагрузка
sudo systemctl start vsftpd
sudo systemctl enable vsftpd

рестарт
sudo service vsftpd restart

стоп
sudo service vsftpd stop

настройка
sudo nano /etc/vsftpd.conf


